version: '3'
services:
  mysqldb:
    image: mysql:8.0
    restart: always
    container_name: mysqldb
    networks:
      - microservices-network
    ports:
      - "3306:3306"
    expose:
      - "3306"
    environment:
      MYSQL_DATABASE: usersvc
      MYSQL_ROOT_PASSWORD: root
    volumes:
            - db_data:/var/lib/mysql
    depends_on:
       - vault
       - setup-vault
  
  redis:
   container_name: redis
   image: redis:6-alpine
   networks:
      - microservices-network
   hostname: redis
   ports: 
    - "6379:6379"

  vault:
    image: vault:1.7.3
    networks:
      - microservices-network
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: 00000000-0000-0000-0000-000000000000
      VAULT_ADDR: http://vault:8200
    ports:
      - 8200:8200
    cap_add:
      - IPC_LOCK

  #This container will stop as soon as the vault-setup script gets completed
  setup-vault:
    image: vault:1.7.3
    networks:
      - microservices-network
    depends_on:
      - vault
    volumes:
      - ./scripts:/scripts
    environment:
      VAULT_ADDR: http://vault:8200
      VAULT_DEV_ROOT_TOKEN_ID: 00000000-0000-0000-0000-000000000000
      VAULT_TOKEN: 00000000-0000-0000-0000-000000000000
      CONFIG_ADDR: '/config'
    entrypoint: /scripts/vault-setup.sh

  user-service:
    container_name: user-service
    build: ./user-service
    restart: on-failure
    networks:
      - microservices-network
    ports:
      - "8081:8081"
    depends_on:
      - mysqldb
      - vault
      - redis
      - setup-vault
    entrypoint: /bin/sh

  patient-service:
    container_name: patient-service
    build: ./patient-service
    restart: on-failure
    networks:
      - microservices-network
    ports:
      - "8082:8082"
    depends_on:
      - mysqldb
      - vault
      - user-service
      - setup-vault
    entrypoint: /bin/sh

  vital-sign-service:
    container_name: vital-sign-service
    build: ./vital-sign-service
    restart: on-failure
    networks:
      - microservices-network
    ports:
      - "8083:8083"
    depends_on:
      - mysqldb
      - vault
      - user-service
      - patient-service
      - setup-vault
    entrypoint: /bin/sh

networks:
   microservices-network:
     driver: bridge

volumes:
        db_data: {}
